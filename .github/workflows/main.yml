name: "CI"
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Postgres
      uses: harmon758/postgresql-action@v1
      with:
        postgresql db: test
        postgresql password: password

    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup node
      uses: actions/setup-node@v2
      with:
        node-version: 14

    - name: Install poetry
      uses: snok/install-poetry@v1.1.3
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Install pyright
      run: npm install -g pyright

    - name: Load cache
      uses: actions/cache@v2
      id: cached-dependecies
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-${{ matrix.python-version }}

    - name: Validate pyproject.toml
      run: poetry check

    - name: Install dependencies
      if: steps.cached-dependecies.outputs.cache-hit != 'true'
      run: poetry install

    - name: Run Tests
      run: poetry run pytest
      env:
          POSTGRES_DSN: postgres://postgres:password@localhost/test
